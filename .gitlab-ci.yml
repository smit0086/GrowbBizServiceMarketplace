stages:
    - build
    - publish
    - deploy

build-frontend:
    stage: build
    image: node:18-alpine
    before_script:
        - chmod +x ./setup_env.sh
        - sh ./setup_env.sh
    script:
        - ls
        - cd ./frontend
        - ls
        - npm ci
        - npm run build
        - mkdir fe_app
        - mkdir ./fe_app/.next
        - cp .env ./fe_app/.env
        - cp -r ./public ./fe_app/public
        - cp -a ./.next/standalone/. ./fe_app
        - cp -r ./.next/static ./fe_app/.next/static
    artifacts:
        name: fe_app
        paths:
            - ./frontend/fe_app/
            - ./frontend/.env
    only:
        - main
        - dev

build-backend:
    stage: build
    image: maven:3.9.4-eclipse-temurin-17
    script:
        - echo "Building backend..."
        - cd backend
        - ./mvnw install
    artifacts:
        paths:
            - backend/target/backend-0.0.1-SNAPSHOT.jar
    only:
        - main
        - dev

deploy-dev-backend:
    stage: deploy
    image: kroniak/ssh-client
    variables:
        DEPLOY_PATH: "/home/student/deployment/dev"
    script:
        - chmod 400 "${SSH_KEY}"
        - ssh -o StrictHostKeyChecking=no -i "${SSH_KEY}" "${SSH_USER}@${SSH_HOST}" "mkdir -p ${DEPLOY_PATH}"
        - scp -o StrictHostKeyChecking=no -i "${SSH_KEY}" -r [!.]* "${SSH_USER}@${SSH_HOST}:${DEPLOY_PATH}"
        - ssh -o StrictHostKeyChecking=no -i "${SSH_KEY}" "${SSH_USER}@${SSH_HOST}" "cd ${DEPLOY_PATH} && ./deploy.sh"
    only:
        - dev
